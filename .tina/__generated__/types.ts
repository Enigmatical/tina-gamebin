// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};



export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Int'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getGameDocument: GameDocument;
  getGameList: GameConnection;
};


export type QueryGetCollectionArgs = {
  collection?: Maybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: Maybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};


export type QueryGetGameDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetGameListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label: Scalars['String'];
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};

export type DocumentNode = GameDocument;

export type GameMeta = {
  __typename?: 'GameMeta';
  genre?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  medium?: Maybe<Scalars['String']>;
};

export type GameSectionsDetails = {
  __typename?: 'GameSectionsDetails';
  dateReleased?: Maybe<Scalars['String']>;
  averageRating?: Maybe<Scalars['String']>;
  averagePlaytime?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  learnMoreLink?: Maybe<Scalars['String']>;
};

export type GameSectionsBacklog = {
  __typename?: 'GameSectionsBacklog';
  interest?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
};

export type GameSectionsReview = {
  __typename?: 'GameSectionsReview';
  dateFinished?: Maybe<Scalars['String']>;
  stars?: Maybe<Scalars['String']>;
  playtime?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
};

export type GameSections = GameSectionsDetails | GameSectionsBacklog | GameSectionsReview;

export type Game = {
  __typename?: 'Game';
  name?: Maybe<Scalars['String']>;
  deck?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  meta?: Maybe<GameMeta>;
  sections?: Maybe<Array<Maybe<GameSections>>>;
  boxart?: Maybe<Scalars['String']>;
};

export type GameDocument = Node & Document & {
  __typename?: 'GameDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Game;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type GameConnectionEdges = {
  __typename?: 'GameConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<GameDocument>;
};

export type GameConnection = Connection & {
  __typename?: 'GameConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<GameConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  updateGameDocument: GameDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: Maybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateGameDocumentArgs = {
  relativePath: Scalars['String'];
  params: GameMutation;
};

export type DocumentMutation = {
  game?: Maybe<GameMutation>;
};

export type GameMetaMutation = {
  genre?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  medium?: Maybe<Scalars['String']>;
};

export type GameSectionsDetailsMutation = {
  dateReleased?: Maybe<Scalars['String']>;
  averageRating?: Maybe<Scalars['String']>;
  averagePlaytime?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  learnMoreLink?: Maybe<Scalars['String']>;
};

export type GameSectionsBacklogMutation = {
  interest?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
};

export type GameSectionsReviewMutation = {
  dateFinished?: Maybe<Scalars['String']>;
  stars?: Maybe<Scalars['String']>;
  playtime?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
};

export type GameSectionsMutation = {
  details?: Maybe<GameSectionsDetailsMutation>;
  backlog?: Maybe<GameSectionsBacklogMutation>;
  review?: Maybe<GameSectionsReviewMutation>;
};

export type GameMutation = {
  name?: Maybe<Scalars['String']>;
  deck?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  meta?: Maybe<GameMetaMutation>;
  sections?: Maybe<Array<Maybe<GameSectionsMutation>>>;
  boxart?: Maybe<Scalars['String']>;
};

